1.) setup / configure
2.) test addresses from ethereum mainnet
3.) deploy to forked ethereum -using a mainnet address
4.) deploy a contract to read balance from token 
- test with mainnet contractaddress , user address

install notes

   3  sudo apt-get update
    4  curl -sL https://deb.nodesource.com/setup_14.x -o nodesource_setup.sh
    5  sudo bash nodesource_setup.sh
    6  sudo apt install nodejs build-essential
    7  npm install web3
    8  npm install --save-dev @nomiclabs/hardhat-ethers ethers @nomiclabs/hardhat-waffle ethereum-waffle chai
npm i @openzeppelin/contracts@4.5.0
    9  
   13  mkdir forkingDemo
   14  cd forkingDemo/
   15  npx hardhat
   24  vi hardhat.config.js
   25  npx hardhat node --fork https://cloudflare-eth.com/
   26  ls
  13  mkdir forkingDemo
   14  cd forkingDemo/
   15  npx hardhat
   16  ls


hardhat.config
npx hardhat node --fork https:

require("@nomicfoundation/hardhat-toolbox");

/** @type import('hardhat/config').HardhatUserConfig */
module.exports = {
        networks: {
                hardhat: {
                localhost: {
                        url: "http://ec2-35-88-12-204.us-west-2.compute.amazonaws.com:8545"
            ,           chainID: 1337

                }
,
			forking: { 
				url: "https://cloudflare-eth.com/",

			}

		}
   },

        solidity: "0.8.18",
};


/forkDemo$ npx hardhat node --hostname localhost    # make sure to run as localhost vs the dns


npx hardhat console --network localhost


>await ethers.provider.getBalance("< my local address >")

e.g.
>await ethers.provider.getBalance("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266")

>await ethers.provider.getBalance("<address from etherscan>")
e.g.
> await ethers.provider.getBalance("0x71A3Bfe8f5d56F42B39F3f218edCac6311B2f38f")
845744216400112038531n

check against : 
https://etherscan.io/address/0x71a3bfe8f5d56f42b39f3f218edcac6311b2f38f



pragma solidity ^0.8.9;

// Store a single data point and allow fetching/updating of that datapoint
contract Hello {

    // data point
    string public storedData;

    event myEventTest(string eventOutput);

    function set(string memory myText) public {
        storedData = myText;
        emit myEventTest(myText);
    }

    function get() public view returns (string memory) {
        return storedData;
    }

}

npx hardhat console --network localhost
Welcome to Node.js v14.21.3.
Type ".help" for more information.
>  const signers = await ethers.getSigners();
undefined
> const contract =  await ethers.getContractFactory("Hello")
undefined
> const cd = await contract.deploy()
> await cd.set('aaabbbb')
Promise {
  <pending>,
  [Symbol(async_id_symbol)]: 3248,
  [Symbol(trigger_async_id_symbol)]: 13,
  [Symbol(destroyed)]: { destroyed: false }
}
> await cd3.get()
'aaabbbb'
>


 const signers = await ethers.getSigners();
>const contract =  await ethers.getContractFactory("Hello")
>contract.connect(signers[0])
>const cd = contract.deploy()
>contract.set('more')
>contract.get()
>await ethers.provider.getBalance(signers[0].address)



 const signers2 = await ethers.getSigners();
> contractD2.connect(signers[0]);
> await ethers.provider.getBalance(signers[0].address)
9999983327908310651332n
>const contract   await =  ethers.getContractFactor("Hello")
>contract.connect(signers[0])
>const cd = contract.deploy()
>contract.set('more')
>contract.get()
>await ethers.provider.getBalance(signers[0].address)






> signers[0].address
'0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'
> const signers2 = await ethers.getSigners();
> contractD2.connect(signers[0]);
> await ethers.provider.getBalance(signers[0].address)
9999983327908310651332n
> contractD2.set('more')
> await contractD2.get()
'more'
>







pragma solidity >=0.7.0 <0.9.0

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";


contract Checker {
	function check(address _token, address user) view public return
		return IERCO(_token).balanceOf(user)
	}
}



> await ethers.provider.getBalance(signers[0].address)
9999983078486421584324n








   27  vi hardhat.config.js
   28  npx hardhat node
  43  npx hardhat node
   44  npx hardhat node --hostname    ec2-35-87-164-14.us-west-2.compute.amazonaws.com
